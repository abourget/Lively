Lively is like Cover It Live, ScribbleLive, or Breaking News, but for the free man.  It is similar (at least from the output perspective) to what you get from Gizmodo's, Engadget's and other news outlets "Live news coverage" pages.

It was started in 6 hous at the HTML5 Hackathon in Montreal, on October 26th 2011.  Since then, we might have added a couple of things but we got something fully functional with text inputs on that day, including templates and drag'n'drop for layout and publishing, the live trash and the nuggets panels.

TODO: implement the SERVER-SIDE saving of the feed, and re-showing upon next page load.. (so that we can continue the flow)
TODO: implement server-side permissions checks
TODO: implement authentication
TODO: implement "multiple live events" on the service (using name-prefixed queues)
TODO: flag the content as USED when someone uses it in a broadcasted template, gray it out for all moderators


 Demoed:
  nodejs
   - some code based on crhack (DJBreakpoint ?)
  nodejs-socketio (client and server)
   - websockets
  node-redis
   - broadcasting queues
  icanhaz (templating based on Mustache)
  jQuery
  CSS3 buttons
  HTML5 boilerplate (by Paul Irish)
  CSS Fonts
  HTML5 drag'n'drop
  ContentEditable
  Monetize user-generated content


Using the embed code will affect the JavaScript global environment in these ways:
- Adds the LIVELY object to the global scope
- Adds the io object to the global scope (until Socket.IO supports configuring the JSONP callback)
- Adds a CSS file where all selectors are prefixed with #LIVELY-cnt
- Loads jQuery as LIVELY.jQuery (calls $.noConflict(true) if you already use it)
- Loads yepnope in the global scope (although that should change soon)
